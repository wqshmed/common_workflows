name: Feature/Bugfix Branches

on:
  workflow_call:
    inputs:
      java_version:
        default: 17
        required: false
        type: string
      docker_image_name:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: false
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  # New Job: Extract a short branch name for deployment
  set_review_branch:
    runs-on: ubuntu-latest
    outputs:
      deploy_branch: ${{ steps.set.outputs.deploy_branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate safe deploy branch name
        id: set
        run: |
          # Grab the branch name
          branch="${GITHUB_REF##*/}"
          echo "Original branch: $branch"

          # Lowercase it
          branch=$(echo "$branch" | tr '[:upper:]' '[:lower:]')

          # Replace anything not alphanum or hyphen with hyphen
          # This also replaces `/` â†’ `-`
          safe_branch=$(echo "$branch" | sed 's#[^a-z0-9-]#-#g')

          # Collapse multiple dashes (optional)
          safe_branch=$(echo "$safe_branch" | sed 's/-\{2,\}/-/g')

          # Trim leading/trailing dashes (optional)
          safe_branch=$(echo "$safe_branch" | sed 's/^-//' | sed 's/-$//')

          echo "deploy_branch=$safe_branch" >> $GITHUB_OUTPUT
          echo "Generated deploy branch: $safe_branch"


  checkstyle:
    needs: set_review_branch
    uses: ./.github/workflows/checkstyle.yml
    with:
      java_version: ${{ inputs.java_version }}

  build:
    needs: checkstyle
    uses: ./.github/workflows/build.yml
    with:
      java_version: ${{ inputs.java_version }}

  unit_tests:
    needs: build
    uses: ./.github/workflows/unit_tests.yml
    with:
      java_version: ${{ inputs.java_version }}

  integration_tests:
    needs: build
    uses: ./.github/workflows/integration_tests.yml
    with:
      java_version: ${{ inputs.java_version }}

  sonar_scan:
    needs: build
    uses: ./.github/workflows/sonar_scan.yml
    with:
      java_version: ${{ inputs.java_version }}
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dockerize:
    needs: [ unit_tests, integration_tests, sonar_scan ]
    uses: ./.github/workflows/dockerize.yml
    with:
      java_version: ${{ inputs.java_version }}
      image_name: ${{ inputs.docker_image_name }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}


  snyk_scan:
    needs: dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Snyk Scan
        run: echo "Running Snyk security scan..."

  xray_scan:
    needs: dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Xray Scan
        run: echo "Running Xray vulnerability scan..."

  deploy:
    needs: [snyk_scan, xray_scan]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to environment
        run: echo "Deploying to target environment..."

  smoke_regression:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Smoke & Regression Tests
        run: echo "Executing smoke & regression tests..."

  dev_review_approved:
    needs: smoke_regression
    runs-on: ubuntu-latest
    steps:
      - name: Dev Code Review Complete & Approved
        run: echo "Dev team reviewed & approved."

  qa_review_approved:
    needs: smoke_regression
    runs-on: ubuntu-latest
    steps:
      - name: QA Review Complete & Approved
        run: echo "QA team reviewed & approved."

  full_regression:
    needs: [dev_review_approved, qa_review_approved]
    runs-on: ubuntu-latest
    steps:
      - name: Full Regression Tests
        run: echo "Running full regression suite..."

  dev_review_for_merge:
    needs: full_regression
    runs-on: ubuntu-latest
    steps:
      - name: Dev Review for Merge
        run: echo "Dev team reviewing for merge..."

  qa_review_for_merge:
    needs: full_regression
    runs-on: ubuntu-latest
    steps:
      - name: QA Review for Merge
        run: echo "QA team reviewing for merge..."
